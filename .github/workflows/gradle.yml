name: TripAi CI/CD
on:
  push:
    branches: [ "main" ]        # 메인브랜치에 푸쉬가 되면
  pull_request:
    branches: [ "main" ]

jobs:
  deploy: # deploy라는 작업을 할것이다
    runs-on: ubuntu-latest    # 우분투 최신버전으로 진행 한다
    steps: # 순서대로 실행한다

      - name: 저장소 Checkout
        uses: actions/checkout@v3   # 레포지토리 한번 체크

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: yml 생성
        run: touch application.yml  # 비어있는 yml 파일 하나 생성

      - name: secrets에 있는 APPLICATION 내용을 yml 파일에 덮어쓰기
        run: echo "${{secrets.PROPERTIES}}" > ./src/main/resources/application.yml   # APPLICATION에 있는 내용 저 경로에 추가


      - name: yml 파일 다운받을 수 있게 업로드
        uses: actions/upload-artifact@v3.1.2
        with:
          name: application.yml
          path: ./src/main/resources/


      - name: gradlew 실행권한 주기
        run: chmod +x gradlew

      - name: 스프링부트 애플리케이션 빌드
        run: ./gradlew clean build -x test

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 도커 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_HUB_REPO }} .

      - name: Docker Hub 퍼블리시
        run: docker push ${{ secrets.DOCKER_HUB_REPO }}

      - name: WAS 인스턴스 접속 및 애플리케이션 실행
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }} #/.ssh/id_rsa 아닌 pem 키
          port: ${{ secrets.PORT }}
          script: |
            docker stop ${{ secrets.CONTAINER_NAME }}
            docker rm ${{ secrets.CONTAINER_NAME }}
            docker image rm $(docker images -q)
            docker pull ${{ secrets.DOCKER_HUB_REPO }}
            docker run -d --name ${{ secrets.CONTAINER_NAME }} -p 8080:8080 ${{ secrets.DOCKER_HUB_REPO }}